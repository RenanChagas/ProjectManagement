package br.com.management.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import br.com.management.dao.NotificationDao;
import br.com.management.dao.ProjectDao;
import br.com.management.dao.TaskDao;
import br.com.management.model.Project;
import br.com.management.service.ProjectService;
import br.com.management.service.TaskService;

@Service("ProjectService")
@Transactional
public class ProjectServiceImpl implements ProjectService{
	
	@Autowired
	private ProjectDao dao;
	
	@Autowired
	private TaskDao taskDao;
	
	@Autowired
	private NotificationDao notificationDao;
	
	@Autowired
	private TaskService taskService;
	
	@Autowired
	private NotificationService notificationService;

	@Override
	public void save(Project project) {
		project.setFinishState(1);
		project.setStateIcon("query_builder");
		dao.save(project);
	}

	@Override
	public void update(Project project) {
		
		//Fixing null values that werent changed
		Project projectRealValue = findById(project.getId());
		if (project.getDueDate() == null){
			project.setDueDate(projectRealValue.getDueDate());
		}
		if (project.getCreateUser() == null){
			project.setCreateUser(projectRealValue.getCreateUser());
		}
		if (project.getCreateDate() == null){
			project.setCreateDate(projectRealValue.getCreateDate());
		}
		
		switch(project.getFinishState()){
		
		case 1:
			project.setStateIcon("query_builder");
			break;
		case 2:
			project.setStateIcon("done_all");
			break;
		case 3:
			project.setStateIcon("clear");
			break;
		}
		
		
		System.out.println(project);
		System.out.println(projectRealValue);
		
		dao.save(project);
	}

	@Override
	public Project findById(int id) {
		return dao.findById(id);
	}

	@Override
	public Project findByProjectName(String projectName) {
		return dao.findByProjectName(projectName);
	}
	
	public List<Project> findAllByOrderByIdAsc() {
		return dao.findAllByOrderByIdAsc();
	}
	
	@Override
	public void deleteById(int id) {
		
		taskDao.deleteInBatch(taskService.findAllByProjectIdOrderByIdAsc(id));
		dao.deleteById(id);
	}

}
